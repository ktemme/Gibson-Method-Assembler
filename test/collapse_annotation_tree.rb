def reversecomplement(sequence)
  sequence.reverse.tr('ACGTacgt','TGCAtgca')
end

def locate_feature_in_template(template,query)
  result = []
  template.scan(query) {
    result << {
      :start => Regexp.last_match.begin(0),
      :end => Regexp.last_match.begin(0) + query.size,
      :direction => 'forward',
      :sequence => query
    }
  }
  template.scan(reversecomplement(query)) {
    result << {
      :start => Regexp.last_match.begin(0),
      :end => Regexp.last_match.begin(0) + query.size,
      :direction => 'reverse',
      :sequence => query
    }
  }
  result
end


sequence = "cggcgataatggcctgcttctcgccgaaacgtttggtggcgggaccagtgacgaaggcttgagcgagggcgtgcaagattccgaataccgcaagcgacaggccgatcatcgtcgcgctccagcgaaagcggtcctcgccgaaaatgacccagagcgctgccggcacctgtcctacgagttgcatgataaagaagacagtcataagtgcggcgacgatagtcatgccccgcgcccaccggaaggagctgactgggttgaaggctctcaagggcatcggcggagcttatcgactgcacggtgcaccaatgcttctggcgtcaggcagccatcggaagctgtggtatggctgtgcaggtcgtaaatcactgcataattcgtgtcgctcaaggcgcactcccgttctggataatgttttttgcgccgacatcataacggttctggcaaatattctgaaatgagctgttgacaattaatcatcggctcgtataatgtgtggaattgtgagcggataacaatttactagagattaaagaggagaaattaagcATGAAAACTATGGACGGTAACGCTGCGGCTGCATGGATTAGCTACGCCTTTACCGAAGTGGCTGCGATCTACCCGATTACGCCGAGCACCCCGATGGCGGAAAATGTGGACGAATGGGCTGCGCAGGGCAAGAAGAACCTCTTCGGCCAGCCGGTGCGCCTGATGGAGATGCAGTCGGAAGCGGGTGCAGCAGGTGCTGTGCATGGCGCCTTGCAAGCTGGCGCACTGACGACCACCTACACCGCGTCGCAGGGCCTGTTGCTGATGATCCCAAACATGTACAAAATCGCGGGTGAACTGCTGCCGGGTGTCTTTCATGTTTCGGCACGCGCACTGGCCACCAATAGCCTCAACATCTTTGGCGATCATCAGGATGTAATGGCGGTGCGCCAAACGGGCTGCGCGATGTTGGCCGAGAATAACGTCCAGCAAGTTATGGATTTGTCCGCGGTAGCCCACTTGGCAGCGATCAAAGGTCGCATTCCGTTCGTGAACTTCTTCGATGGCTTTCGCACCAGCCACGAAATCCAGAAGATCGAGGTTCTGGAATATGAACAGCTGGCCACCTTGTTGGATCGTCCGGCCCTGGACAGCTTCCGCCGTAACGCCCTTCACCCGGACCACCCGGTCATCCGTGGCACCGCCCAGAACCCGGACATCTACTTCCAGGAACGTGAGGCCGGTAACCGTTTCTATCAGGCGCTCCCGGATATTGTGGAATCTTACATGACCCAGATTTCTGCCCTGACTGGTCGCGAGTATCACCTGTTTAACTACACTGGTGCTGCGGATGCGGAGCGCGTGATCATCGCGATGGGCTCTGTCTGTGACACCGTCCAAGAGGTGGTTGACACGCTGAATGCAGCGGGTGAGAAAGTTGGTCTGCTCTCCGTTCATCTTTTCCGCCCGTTTTCGTTAGCGCACTTCTTCGCCCAACTGCCGAAAACTGTACAGCGTATCGCAGTATTGGACCGTACGAAAGAGCCAGGTGCTCAAGCAGAGCCGCTGTGCCTCGATGTGAAGAATGCCTTTTACCACCATGACGATGCCCCGTTGATTGTGGGTGGTCGCTATGCCTTGGGCGGTAAGGACGTGTTGCCGAACGATATTGCGGCCGTGTTTGATAACCTGAACAAACCGCTGCCGATGGACGGCTTCACGCTGGGTATCGTGGACGATGTTACCTTCACCTCTCTCCCGCCAGCGCAGCAGACCCTGGCGGTTTCTCACGACGGCATCACGGCATGTAAGTTTTGG"

features = [
      {:name => 'tet', :sequence => 'cggcgataatggcctgcttctcgccgaaacgtttggtggcgggaccagtgacgaaggcttgagcgagggcgtgcaagattccgaataccgcaagcgacaggccgatcatcgtcgcgctccagcgaaagcggtcctcgccgaaaatgacccagagcgctgccggcacctgtcctacgagttgcatgataaagaagacagtcataagtgcggcgacgatagtcatgccccgcgcccaccggaaggagctgactgggttgaaggctctcaagggcatcggcggagcttatcgactgcacggtgcaccaatgcttctggcgtcaggcagccatcggaagctgtggtatggctgtgcaggtcgtaaatcactgcataattcgtgtcgctcaaggcgcactcccgttctggataatgttttttgcgccgacatcataacggttctggcaaatattctgaaatgagctgttgacaattaatcatcggctcgtataatgtgtggaattgtgagcggataacaatttactagagat'},
      {:name => 'gene J', :sequence => 'taaagaggagaaattaagcATGAAAACTATGGACGGTAACGCTGCGGCTGCATGGATTAGCTACGCCTTTACCGAAGTGGCTGCGATCTACCCGATTACGCCGAGCACCCCGATGGCGGAAAATGTGGACGAATGGGCTGCGCAGGGCAAGAAGAACCTCTTCGGCCAGCCGGTGCGCCTGATGGAGATGCAGTCGGAAGCGGGTGCAGCAGGTGCTGTGCATGGCGCCTTGCAAGCTGGCGCACTGACGACCACCTACACCGCGTCGCAGGGCCTGTTGCTGATGATCCCAAACATGTACAAAATCGCGGGTGAACTGCTGCCGGGTGTCTTTCATGTTTCGGCACGCGCACTGGCCACCAATAGCCTCAACATCTTTGGCGATCATCAGGATGTAATGGCGGTGCGCCAAACGGGCTGCGCGATGTTGGCCGAGAATAACGTCCAGCAAGTTATGGATTTGTCCGCGGTAGCCCACTTGGCAGCGATCAAAGGTCGCATTCCGTTCGTGAACTTCTTCGATGGCTTTCGCACCAGCCACGAAATCCAGAAGATCGAGGTTCTGGAATATGAACAGCTGGCCACCTTGTTGGATCGTCCGGCCCTGGACAGCTTCCGCCGTAACGCCCTTCACCCGGACCACCCGGTCATCCGTGGCACCGCCCAGAACCCGGACATCTACTTCCAGGAACGTGAGGCCGGTAACCGTTTCTATCAGGCGCTCCCGGATATTGTGGAATCTTACATGACCCAGATTTCTGCCCTGACTGGTCGCGAGTATCACCTGTTTAACTACACTGGTGCTGCGGATGCGGAGCGCGTGATCATCGCGATGGGCTCTGTCTGTGACACCGTCCAAGAGGTGGTTGACACGCTGAATGCAGCGGGTGAGAAAGTTGGTCTGCTCTCCGTTCATCTTTTCCGCCCGTTTTCGTTAGCGCACTTCTTCGCCCAACTGCCGAAAACTGTACAGCGTATCGCAGTATTGGACCGTACGAAAGAGCCAGGTGCTCAAGCAGAGCCGCTGTGCCTCGATGTGAAGAATGCCTTTTACCACCATGACGATGCCCCGTTGATTGTGGGTGGTCGCTATGCCTTGGGCGGTAAGGACGTGTTGCCGAACGATATTGCGGCCGTGTTTGATAACCTGAACAAACCGCTGCCGATGGACGGCTTCACGCTGGGTATCGTGGACGATGTTACCTTCACCTCTCTCCCGCCAGCGCAGCAGACCCTGGCGGTTTCTCACGACGGCATCACGGCATGTAAGTTTTGG'},
      {:name => 'Junction 1 forward', :sequence => 'tgcaggtcgtaaatcactgc'},
      {:name => 'Junction 1 reverse', :sequence => 'TGATACTCGCGACCAGTCAG'},
      {:name => 'Junction 2 forward', :sequence => 'GAAAGTTGGTCTGCTCTCCG'},
      {:name => 'Junction 2 reverse', :sequence => 'cttgagagccttcaacccag'}  
]


annotations = Array.new
features.each do |feature|
  annotations << locate_feature_in_template(sequence,feature[:sequence])
end
annotations.flatten!


